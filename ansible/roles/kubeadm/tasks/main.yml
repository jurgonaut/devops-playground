- name: Turn off swap
  ansible.builtin.shell: |
    swapoff -a
  tags: [ "kubeadm" ]

- name: Install system packages
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  loop: "{{ system_modules }}"
  tags: [ "kubeadm" ]

- name: Create keyring folder and file
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
  loop:
    - { path: /etc/apt/keyrings, state: directory }
    - { path: /etc/apt/keyrings/docker.asc, state: touch }
  tags: [ "kubeadm" ]

- name: Add docker gpg key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.asc
  tags: [ "kubeadm" ]

- name: Add docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  tags: [ "kubeadm" ]

- name: Install docker
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  loop: "{{ docker_modules }}"
  tags: [ "kubeadm" ]

- name: Change cgroup driver
  ansible.builtin.copy:
    src: templates/docker-daemon.json
    dest: /etc/docker/daemon.json
  tags: [ "kubeadm" ]

- name: Download cri-docker
  ansible.builtin.get_url:
    url: https://github.com/Mirantis/cri-dockerd/releases/download/v{{ cri_docker_version }}/cri-dockerd_{{ cri_docker_version }}.3-0.debian-bookworm_amd64.deb
    dest: /tmp/cri-docker-{{ cri_docker_version }}.deb
  tags: [ "kubeadm" ]

- name: Install cri-docker
  ansible.builtin.apt:
    deb: /tmp/cri-docker-{{ cri_docker_version }}.deb
  tags: [ "kubeadm" ]

# - name: Enable sysctl config
#   ansible.posix.sysctl:
#     name: net.ipv4.ip_forward
#     value: '1'
#     sysctl_set: true
#   tags: [ "kubeadm" ]

- name: enable net bridge
  ansible.builtin.shell: |
    tee /etc/sysctl.d/kubernetes.conf<<EOF
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    net.ipv4.ip_forward = 1
    EOF
    sysctl --system
    modprobe br_netfilter
  tags: [ "kubeadm" ]

- name: Create keyring folder and file
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { path: /etc/apt/keyrings, state: directory, mode: 775 }
    - { path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg, state: touch, mode: 644 }
  tags: [ "kubeadm" ]

- name: Add kubernetes gpg key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  tags: [ "kubeadm" ]

- name: Add kubernetes repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
    state: present
  tags: [ "kubeadm" ]

- name: Install kubernetes packages
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  loop: "{{ kubernetes_modules }}"
  tags: [ "kubeadm" ]

- name: Enable kubelet service
  ansible.builtin.service:
    name: kubelet
    state: started
  tags: [ "kubeadm" ]
